name:      "MAXScript"
scopeName: "source.maxscript"
fileTypes: ["ms", "mcr", "mce"]

foldingStartMarker: "(-{2})?\\(\\s*$"
foldingStopMarker:  "^\\s*(-{2})?\\s*\\)"
patterns: [
	{
		"name":  "keyword.operator.maxscript"
		"match": '(?i)(?:(\\(|\\)|\\+=?|\\*=?|-=?|\\/=?|\\^|!?=|,|\\[|\\]|:|\'|&|\\{|\\}|={1,2}|<=?|>=?|\\?|\\$|\\.{1,3}|\\\\))|(?:\\b(?<![\\.\\$])(and|as|by|in|not|of|or|to)(?!\\s*:)\\b)'
	}
	
	{
		"name":  "keyword.control.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(animate|at|case|catch|collect|continue|do|else|exit|for|if|max|return|set|then|throw|try|undo|when|where|while|with)(?!\\s*:)\\b"
	}
	
	{
		"name":  "storage.type.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(fn|function|macroscript|parameters|plugin|rcmenu|rollout|struct|tool|utility)(?!\\s*:)\\b"
	}
	
	{
		"name":  "storage.modifier.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(about|coordsys|global|local|mapped|persistent)(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.boolean.true.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(true|on)(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.boolean.false.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(false|off)(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.math.pi.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])pi(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.colour.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(red|green|blue|white|black|orange|yellow|brown|gray)(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.axis.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])[xyz]_axis(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.ok.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])ok(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.undefined.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])undefined(?!\\s*:)\\b"
	}

	{
		"name":  "constant.language.unsupplied.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])unsupplied(?!\\s*:)\\b"
	}
	
	{
		"name":  "constant.language.dontcollect.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])dontcollect(?!\\s*:)\\b"
	}
	
	
	{
		"name":  "constant.language.math.euler.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])e(?!\\s*:)\\b"
	}
	
	{
		"name":  "keyword.reserved.maxscript"
		"match": "(?i)\\b(?<![\\.\\$])(from)(?!\\s*:)\\b"
	}
	
	{
		"name":  "punctuation.terminator.statement.maxscript"
		"match": ";"
	}
	
	{
		"name":  "storage.type.array.maxscript"
		"begin": "(#)\\s*(\\()"
		"beginCaptures":
			"1": {"name": "punctuation.definition.array.begin.maxscript"}
			"2": {"name": "meta.brace.round.maxscript"}
		"end":  "\\)"
		"endCaptures":
			"0": {"name": "meta.brace.round.maxscript"}
		"patterns": [
			{"include": "#double-quotes"},
			{"include": "#single-quotes"},
			{"include": "#float"},
			{"include": "#int"}
		]
	}
	
	{ "include": "#double-quotes" }
	{ "include": "#single-quotes" }
	{ "include": "#float" }
	{ "include": "#int" }
]

repository: {
	"single-quotes": {
		"patterns": [{
			"name":  "string.quoted.single.maxscript"
			"begin": "'"
			"beginCaptures":
				"0": {"name": "punctuation.definition.string.begin.maxscript"}
			"end": "'"
			"endCaptures":
				"0": {"name": "punctuation.definition.string.end.maxscript"}

			"patterns": [{
				"name":  "constant.character.escape.maxscript"
				"match": "\\\\(\\*|\\?|\\\\)"
			}]
		}]
	}

	"double-quotes": {
		"patterns": [{
			"name":  "string.quoted.double.maxscript"
			"begin": '"'
			"beginCaptures":
				"0": {"name": "punctuation.definition.string.begin.maxscript"}
			"end": '"'
			"endCaptures":
				"0": {"name": "punctuation.definition.string.end.maxscript"}
			
			"patterns": [{
				"name":  "constant.character.escape.maxscript"
				"match": "\\\\(n|r|t|\\*|\\?|\\\\|%|x[A-Fa-f0-9]+)"
			}]
		}]
	}
	
	"float": {
		"patterns": [{
			"name":  "constant.numeric.float.maxscript"
			"match": '(?<!\\$)\\b(\\d)(?:(\\.)(\\d+([Ee]([\\+\\-])?\\d+)?))\\b'
			"captures": {
				"1": {"name": "leading.decimal"}
				"2": {"name": "decimal.separator"}
				"3": {"name": "trailing.decimal"}
				"4": {"name": "exponential.decimal"}
			}
		}]
	}
	
	"int": {
		"patterns": [{
			"name":  "constant.numeric.int.maxscript"
			"match": '(?<!\\$)\\b\\d+\\b'
		}]
	}
}
