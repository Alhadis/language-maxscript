
# Language-related variables
MAJOR_TYPES := variable class superclass interface objectset structdef function
MINOR_TYPES := normal const system


# Build-related variables
OBJECTS     := $(sort $(foreach minor,$(MINOR_TYPES),$(addsuffix -$(minor),$(MAJOR_TYPES))))
OBJDIR      := lists/junk
OBJEXT      := .txt
GRAMMAR     := grammars/maxscript.cson


# Binaries
EXTRACT     := utils/extract.js lists/all.txt
BUNDLER     := utils/keyword-bundler.js $(GRAMMAR)


all: terms dictionaries

.PHONY: clean graph %-dictionary


#==============================================================================

# Annihilate every file generated by build tasks
clean:
	@rm -rf $(OBJDIR)


# Print a decorated inheritance tree to illustrate MAXScript topology
graph:
	$(EXTRACT) --graph


# Build a list of all terms
terms: $(OBJDIR) $(OBJECTS:%=$(OBJDIR)/%$(OBJEXT))


# Compile all dictionaries
dictionaries: $(OBJECTS:%=%-dictionary)


# Compile a dictionary of language keywords
%-dictionary:
	@$(BUNDLER) $* < lists/junk/$*$(OBJEXT)


#==============================================================================

# Create the objects directory if it's not been generated yet
$(OBJDIR):
	@test -d "$@" || mkdir "$@"


# Build a single list of terms
$(OBJDIR)/%$(OBJEXT):
	@$(EXTRACT) $(subst -, ,$(basename $(@F))) > $@
